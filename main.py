from rich.console import Console
from rich.prompt import Prompt

console = Console()

def spawn_interaction():
    pass
def souflis_forest_interaction():
    pass
def ici_tout_le_monde_perd_interaction():
    pass
def domaine_des_souflis_interaction():
    pass
def le_casino_du_cartier_des_plaisirs_interaction():
    pass
def le_temple_des_1000_moines_interaction():
    pass
def hetic_interaction():
    pass

class Game:
    def __init__(self, name: str):
        self.name = name
        self.main_player = None

        # Initialisation des places sans les connexions
        spawn = Place(name="Spawn", description="Le point de d√©part du joueur", monsters=[], interaction=spawn_interaction())
        souflis_forest = Place(name="Souflis Forest", description="Un endroit o√π vous pouvez trouver des ressources", monsters=[], interaction=souflis_forest_interaction())
        ici_tout_le_monde_perd = Place(name="Ici tout le monde perd", description="Un endroit o√π vous pouvez trouver des ressources", monsters=[], interaction=ici_tout_le_monde_perd())
        domaine_des_souflis = Place(name="Domaine des Souflis", description="Un endroit o√π vous pouvez trouver des ressources", monsters=[], interaction=domaine_des_souflis_interaction())
        casino = Place(name="Le casino du cartier des plaisirs", description="Un endroit o√π vous pouvez trouver des ressources", monsters=[], interaction=le_casino_du_cartier_des_plaisirs_interaction())
        temple = Place(name="Le temple des 1 000 moines", description="Un endroit o√π vous pouvez trouver des ressources", monsters=[], interaction=le_temple_des_1000_moines_interaction())
        hetic = Place(name="Hetic", description="Un endroit o√π vous pouvez trouver des ressources", monsters=[], interaction=hetic_interaction())

        # Connexions entre les places
        spawn.places_around = {"east": souflis_forest}
        souflis_forest.places_around = {
            "west": spawn,
            "north": ici_tout_le_monde_perd,
            "north-east": domaine_des_souflis,
            "east": hetic,
            "south-east": casino,
            "south": temple,
        }
        ici_tout_le_monde_perd.places_around = {"south": souflis_forest}
        domaine_des_souflis.places_around = {"south-west": souflis_forest}
        casino.places_around = {"west": souflis_forest}
        temple.places_around = {"north-west": souflis_forest}
        hetic.places_around = {"west": souflis_forest}

        # Stockage des places
        self.places = {
            "Spawn": spawn,
            "Souflis Forest": souflis_forest,
            "Ici tout le monde perd": ici_tout_le_monde_perd,
            "Domaine des Souflis": domaine_des_souflis,
            "Le casino du cartier des plaisirs": casino,
            "Le temple des 1 000 moines": temple,
            "Hetic": hetic,
        }

        self.attacks = {
            "Bois de boulogne": Attack(name="Bois de boulogne", description="", battle_cry="", durability=100, effect={"damage": 10} ),
            "Course rapide": Attack(name="Course rapide", description="", battle_cry="", durability=100, effect={"damage": 10} ),
            "Souplesse du judoka": Attack(name="Souplesse du judoka", description="", battle_cry="Go muscu", durability=100, effect={"damage": 10} ),
            "Poing de feu": Attack(name="Poing de feu", description="", battle_cry="Brule en enfer", durability=100, effect={"damage": 10} ),
            "Coup de tonerre": Attack(name="Coup de tonerre", description="", battle_cry="√áa va piquer", durability=100, effect={"damage": 10} ),
            "Grattage du d√©l√©gu√©": Attack(name="Grattage du d√©l√©gu√©", description="", battle_cry="Donne moi tes hp", durability=100, effect={"damage": 10} ),
            "Lanc√© de talon": Attack(name="Lanc√© de talon", description="", battle_cry="Prend toi mon talon", durability=100, effect={"damage": 10} ),
            "Griffure": Attack(name="Griffure", description="", battle_cry="Roarrrr", durability=100, effect={"damage": 10} ),
            "Explosion": Attack(name="Explosion", description="", battle_cry="Araaaaa", durability=100, effect={"damage": 10} ),
            "Vol rapide": Attack(name="Vol rapide", description="", battle_cry="Bismilah", durability=100, effect={"damage": 10} ),
            "Charme": Attack(name="Charme", description="", battle_cry="Mouah üíã", durability=100, effect={"damage": 10} ),
            "Chant brutal": Attack(name="Chant brutal", description="", battle_cry="D√®s que je chanterais tu deviendras sourd.", durability=100, effect={"damage": 10} ),
            "Kamehameha": Attack(name="Kamehameha", description="", battle_cry="Redonne mon couscous", durability=100, effect={"damage": 10} ),
            "Malaka": Attack(name="Malaka", description="", battle_cry="Mange mon grec", durability=100, effect={"damage": 10} ),
            "Control Mental": Attack(name="Control Mental", description="", battle_cry="Au hazard", durability=100, effect={"damage": 10} ),
            "Gear 5": Attack(name="Gear 5", description="", battle_cry="Youhouu", durability=100, effect={"damage": 10} ),
            "Fara 1": Attack(name="Fara 1", description="", battle_cry="", durability=100, effect={"damage": 10} ),
            "Fara 2": Attack(name="Fara 2", description="", battle_cry="", durability=100, effect={"damage": 10} ),
            "Amel 1": Attack(name="Amel 1", description="", battle_cry="", durability=100, effect={"damage": 10} ),
            "Amel 2": Attack(name="Amel 2", description="", battle_cry="", durability=100, effect={"damage": 10} ),
            "Marteau du Forain": Attack(name="Marteau du Forain", description="", battle_cry="K√©vin abat son marteau avec fracas, d√©clenchant une onde de choc qui fait vibrer les miroirs autour de vous.", durability=100, effect={"damage": 100}),
            "Billes de Loterie Explosives": Attack(name="Billes de Loterie Explosives", description="", battle_cry="Il lance une poign√©e de billes color√©es qui explosent en gerbes de lumi√®re aveuglante.", durability=100, effect={"damage": 100}),
            "Claque de la Poigne Gigantesque": Attack(name="Claque de la Poigne Gigantesque", description="", battle_cry="Il pr√©pare une claque charg√©e, des veines lumineuses pulsent sur la main, et un bruit sourd de tension monte dans l‚Äôair. L‚Äôimpact cr√©e une onde de choc qui soul√®ve poussi√®re et d√©bris tout autour.", durability=1, effect={"damage": 100}),
            "Le Lasso de Soie": Attack(name="Le Lasso de Soie", description="Anjaro utilise un lasso en soie fine, qu'il fait briller comme une √©toile. Il l‚Äôenvoie avec √©l√©gance pour attraper ses ennemis et les ramener vers lui avec un mouvement fluide et gracieux.", battle_cry="TU M'ES ACCROCH√â‚Ä¶ ET J'AI UN CR√ÇNE √Ä PR√âSERVER !", durability=100, effect={"damage": 100}),
            "La Roulade du Gentleman": Attack(name="La Roulade du Gentleman", description="Anjaro effectue une roulade parfaitement chor√©graphi√©e, √©vitant les attaques ennemies tout en d√©cochant un coup de pied agile, comme un ma√Ætre de danse.", battle_cry="UNE DANSE AU RYTHME DU STYLE !", durability=100, effect={"damage": 100}),
            "Le Vent du Chapeau": Attack(name="Le Vent du Chapeau", description="Anjaro effectue un mouvement rapide, et son chapeau √©l√©gant se transforme en un projecteur de lumi√®re qui √©blouit temporairement les ennemis autour de lui.", battle_cry="MON STYLE, MA PUISSANCE !", durability=100, effect={"damage": 100}),
            "Le Cr√¢ne de Lumi√®re": Attack(name="Le Cr√¢ne de Lumi√®re", description="Anjaro se tient droit, prend une pause pour s'assurer que son cr√¢ne est parfaitement poli, puis lib√®re une lumi√®re aveuglante depuis son cr√¢ne chauve, envoyant une onde d'√©nergie brillante dans toute la zone. L'onde d√©stabilise ses ennemis, tout en r√©tablissant l‚Äô√©clat de son apparence avec une touche de perfection.", battle_cry="VOUS NE POUVEZ PAS CONCURRENCE AVEC LE CR√ÇNE DU MA√éTRE !", durability=1, effect={"damage": 100}),
            "Le Marteau de la Banque": Attack(name="Le Marteau de la Banque", description="Mathieu fait appara√Ætre un √©norme marteau dor√© en forme de lingot et le balance violemment sur le sol, cr√©ant une onde de choc √©tincelante.", battle_cry="TA BOURSE NE VA PAS AIMER √áA !", durability=100, effect={"damage": 100}),
            "Le Lancer de Pi√®ce F√©tiche": Attack(name="Le Lancer de Pi√®ce F√©tiche", description="Il saisit une pi√®ce dor√©e et la propulse √† une vitesse fulgurante, frappant l‚Äôennemi directement entre les yeux.", battle_cry="C‚ÄôEST √Ä MOI QUE TU LA DOIS, LA MONNAIE !", durability=100, effect={"damage": 100}),
            "Le Coup du Pantalon Tra√Ætre": Attack(name="Le Coup du Pantalon Tra√Ætre", description="Mathieu arrache un pan de ses v√™tements et le fait tournoyer, cr√©ant un vent si puissant qu‚Äôil emporte ses adversaires.", battle_cry="CES FRINGUES NE SONT PAS JUSTE POUR LE STYLE !", durability=100, effect={"damage": 100}),
            "L‚Äô√âcran Noir de la Dette": Attack(name="L‚Äô√âcran Noir de la Dette", description="Mathieu tend les bras, et un immense √©cran translucide appara√Æt au-dessus de l‚Äôar√®ne, projetant une lumi√®re √©blouissante. Sur cet √©cran, une facture gigantesque s‚Äôaffiche avec des chiffres astronomiques qui clignotent, plongeant ses ennemis dans une terreur indescriptible.", battle_cry="ET SI TU PAYAIS TES IMP√îTS ?!", durability=1, effect={"damage": 100}),
            "Low Kick du Kangourou": Attack(name="Low Kick du Kangourou", description="", battle_cry="", durability=100, effect={"damage": 100}),
            "Bouclier du l√©murien": Attack(name="Bouclier du l√©murien", description="", battle_cry="", durability=100, effect={"damage": 100}),
            "D√©ferlante de la jungle": Attack(name="D√©ferlante de la jungle", description="", battle_cry="", durability=1, effect={"damage": 100}),
            "Coup du Lotus Bris√©": Attack(name="Coup du Lotus Bris√©", description="Un coup puissant et cibl√©, imitant l‚Äô√©closion brutale d‚Äôun lotus.", battle_cry="", durability=100, effect={"damage": 100}),
            "Sillage d‚ÄôEncens": Attack(name="Sillage d‚ÄôEncens", description="Une s√©rie de mouvements fluides lib√©rant une fum√©e toxique qui entrave les adversaires.", battle_cry="", durability=100, effect={"damage": 100}),
            "Col√®re des 1000 √Çmes": Attack(name="Col√®re des 1000 √Çmes", description="Le boss invoque les esprits des moines qui l‚Äôentourent pour d√©cha√Æner une temp√™te spirituelle d√©vastatrice.", battle_cry="", durability=1, effect={"damage": 100}),
        }

        self.items = {
            "Cl√© du casino" : Item(name="Cl√© du casino", description="Cette cl√© t'aidera a acceder au boss final !", effect={}),
            "Cl√© de la f√™te foraine" : Item(name="Cl√© de la f√™te foraine", description="Cette cl√© t'aidera a acceder au boss final !", effect={}),
            "Cl√© du temple" : Item(name="Cl√© du temple", description="Cette cl√© t'aidera a acceder au boss final !", effect={}),
            "Cl√© du Domaine" : Item(name="Cl√© du casino", description="Cette cl√© t'aidera a acceder au boss final !", effect={}),
            "Petite potion rouge": Consomable(name="Petite potion rouge", description="Potion donn√© par la d√©esse Ga√Øa (soigne)", effect={"hp": 5}, durability=1)
        }

        self.artefact = {
            "Ecran du mac": Equipable(name="Ecran du Mac", description="Utilis√© comme bouclier, c'est le fameu √©cran du Mac de Mathieu", effect={"defense": 10}),
            "Maxi Ph√¥ Boeuf": Equipable(name="Maxi Ph√¥ Boeuf", description="", effect={"damage": 10}),
            "Jeu de cartes": Equipable(name="Jeu de cartes", description="", effect={})
        }

        self.monsters = {
            "Amelie": Monster(name="Amelie", description="", level=2, stats={}, attack_list=[self.attacks["Amel 1"], self.attacks["Amel 2"]], dropable_items=[self.items["Petite potion rouge"]]),
            "Fara": Monster(name="Fara", description="", level=2, stats={}, attack_list=[self.attacks["Fara 1"], self.attacks["Fara 2"]], dropable_items=[self.items["Petite potion rouge"]]),
            "Imen": Monster(name="Imen", description="", level=2, stats={}, attack_list=[self.attacks["Control Mental"], self.attacks["Gear 5"]], dropable_items=[self.items["Petite potion rouge"]]),
            "Nazim": Monster(name="Nazim", description="", level=2, stats={}, attack_list=[self.attacks["Kamehameha"], self.attacks["Malaka"]], dropable_items=[self.items["Petite potion rouge"]]),
            "Nana la renarde": Monster(name="Nana la renarde", description="", level=2, stats={}, attack_list=[self.attacks["Charme"], self.attacks["Chant brutal"]], dropable_items=[self.items["Petite potion rouge"]]),
            "Youva": Monster(name="Youva", description="", level=2, stats={}, attack_list=[self.attacks["Explosion"], self.attacks["Vol rapide"]], dropable_items=[self.items["Petite potion rouge"]]),
            "Carglass": Monster(name="Carglass", description="", level=2, stats={}, attack_list=[self.attacks["Lanc√© de talon"], self.attacks["Griffure"]], dropable_items=[self.items["Petite potion rouge"]]),
            "Cherif": Monster(name="Cherif", description="", level=2, stats={}, attack_list=[self.attacks["Coup de tonerre"], self.attacks["Grattage du d√©l√©gu√©"]], dropable_items=[self.items["Petite potion rouge"]]),
            "Noa": Monster(name="Noa", description="", level=2, stats={}, attack_list=[self.attacks["Souplesse du judoka"], self.attacks["Poing de feu"]], dropable_items=[self.items["Petite potion rouge"]]),
            "Hamid": Monster(name="Hamid", description="", level=2, stats={}, attack_list=[self.attacks["Bois de boulogne"], self.attacks["Course rapide"]], dropable_items=[self.items["Petite potion rouge"]]),
            "Kevin": Monster(name="Kevin", description="Souverain des rires perdus", level=1000, stats={}, attack_list=[self.attacks["Marteau du Forain"], self.attacks["Billes de Loterie Explosives"], self.attacks["Claque de la Poigne Gigantesque"]], dropable_items=[self.items["Cl√© de la f√™te foraine"]]),
            "Anjaro": Monster(name="Anjaro", description="Roi de la jungle", level=1000, stats={}, attack_list=[self.attacks["Le Lasso de Soie"], self.attacks["La Roulade du Gentleman"], self.attacks["Le Vent du Chapeau"], self.attacks["Le Cr√¢ne de Lumi√®re"]], dropable_items=[]),
            "Mathieu": Monster(name="Mathieu", description="Riche investisseur", level=1000, stats={}, attack_list=[self.attacks["Le Marteau de la Banque"], self.attacks["Le Lancer de Pi√®ce F√©tiche"], self.attacks["Le Coup du Pantalon Tra√Ætre"], self.attacks["L‚Äô√âcran Noir de la Dette"]], dropable_items=[self.items["Cl√© du Domaine"]]),
            "Le Roi Singe": Monster(name="Le Roi Singe", description="P√®re d'Anjaro", level=1000, stats={}, attack_list=[self.attacks["Low Kick du Kangourou"], self.attacks["Bouclier du l√©murien"], self.attacks["D√©ferlante de la jungle"]], dropable_items=[self.items["Cl√© du casino"]]),
            "Lao-ren": Monster(name="Lao-ren", description="Ma√Ætre Shaolin", level=1000, stats={}, attack_list=[self.attacks["Coup du Lotus Bris√©"], self.attacks["Sillage d‚ÄôEncens"], self.attacks["Col√®re des 1000 √Çmes"]], dropable_items=[self.items["Cl√© du temple"]]),

        }

    def start(self):
        console.print(f"[bold blue]Bienvenue dans {self.name}[/bold blue]")
        choice = Prompt.ask(
            "Faites un choix :\n0 - Cr√©er un monde\n1 - Charger un monde",
            choices=["0", "1"]
        )

        if choice == "0":
            console.print("[green]Cr√©ation du personnage...[/green]")
            player_name = Prompt.ask("Quel nom souhaitez-vous donner √† votre personnage ?")
            self.main_player = Player(
                name=player_name,
                level=1,
                xp=0,
                stats={"hp": 100, "attack": 10, "defense": 5},
                attack_list=[],
                place= self.places["Spawn"]
            )

            self.main_player.place.interact()



    def save(self):
        pass

    def load(self):
        pass


class Entity:
    def __init__(self, name: str, description: str, level: int, xp: float, stats: dict, attack_list: list):
        self.name = name
        self.description = description
        self.level = level
        self.xp = xp
        self.stats = stats or {}
        self.attack_list = attack_list or []
        self.status = []

    def attack(self, target: 'Entity') -> None:
        """Effectue une attaque sur la cible"""
        pass

    def take_damage(self, amount: int, damage_type: str) -> None:
        """Re√ßoit des d√©g√¢ts d'un certain type"""
        pass

class Pnj(Entity):
    def __init__(self, dialog: list):
        self.dialog = dialog

    def interact(self):
        pass

class Monster(Entity):
    def __init__(self, name: str, description: str, level: int, stats: dict, attack_list: list, dropable_items: list):
        super().__init__(name, description, level, 0, stats, attack_list)
        self.dropable_items = dropable_items

    def calculate_drops(self):
        pass

class Place:
    def __init__(self, name: str, description: str, places_around: dict, monsters: list, interaction):
        self.name = name
        self.description = description
        self.places_around = places_around or {}
        self.monsters = monsters
        self.exploration = False
        self.interaction = interaction

    def interact(self):
        self.interaction()

class Player(Entity):
    def __init__(self, name: str, level: int, xp: float, stats: dict, attack_list: list, place: Place ):
        super().__init__(name, "", level, xp, stats, attack_list)
        self.inventory = []
        self.place = place

    def show_inventory(self):
        pass

    def use_item(self):
        pass

    def move(self):
        pass

    def add_xp(self):
        pass

class Combat:
    def __init__(self, player: Player, target: Monster):
        self.turn = 1
        self.player = player
        self.target = target
        self.is_active = True

    def start(self) -> None:
        """D√©marre le combat"""
        console.print(f"[red]Combat contre {self.target.name} commenc√© ![/red]")

    def process_turn(self) -> None:
        """G√®re un tour de combat"""
        pass

    def end(self):
        pass

    def escape(self):
        pass

class Item:
    def __init__(self, name: str, description: str, effect: dict):
        self.name = name
        self.descritpion = description
        self.effect = effect

class Equipable(Item):
    def __init__(self, name: str, description: str, effect: dict):
        super().__init__(name, description, effect)
        self.equiped = False

    def equip(self):
        pass

class Consomable(Item):
    def __init__(self, name: str, description: str, effect: dict, durability: int):
        super().__init__(name, description, effect)
        self.active = False
        self.durability = durability

    def use(self):
        pass

class Attack:
    def __init__(self, name: str, description: str, battle_cry: str, durability: int, effect: dict):
        self.name = name
        self.description = description
        self.battle_cry = battle_cry
        self.durability = durability
        self.effect = effect


if __name__ == "__main__":
    game = Game("Mon RPG")

    game.start()
